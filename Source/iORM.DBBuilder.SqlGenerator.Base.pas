unit iORM.DBBuilder.SqlGenerator.Base;

interface

uses
  System.Classes, iORM.DBBuilder.Interfaces, iORM.DB.Interfaces;

type

  TioDBBuilderSqlGenBase = class(TInterfacedObject)
  private
    FFSchema: IioDBBuilderSchema;
  protected
    function NewQuery: IioQuery;
    function FSchema: IioDBBuilderSchema;
    procedure InitializeScript(const AInitialization: TStrings); virtual;
    procedure FinalizeScript(const AFinalization: TStrings); virtual;
  public
    constructor Create(const ASchema: IioDBBuilderSchema);
    procedure DoInitializeScript; virtual;
    procedure DoFinalizeScript; virtual;
    procedure AddEmptyLine; virtual;
    procedure AddComment(const AText: String); virtual;
    procedure AddWarning(const AText: String); virtual;
  end;


implementation

uses
  iORM.DB.Factory, iORM.DB.ConnectionContainer, System.SysUtils;

{ TioDBBuilderSqlGenBase }

procedure TioDBBuilderSqlGenBase.AddComment(const AText: String);
begin
  FSchema.SqlScript.Add('-- ' + AText);
end;

procedure TioDBBuilderSqlGenBase.AddEmptyLine;
begin
  FSchema.SqlScript.Add('');
end;

procedure TioDBBuilderSqlGenBase.AddWarning(const AText: String);
begin
  FSchema.SqlScript.Add('-- Warning: ' + AText);
end;

constructor TioDBBuilderSqlGenBase.Create(const ASchema: IioDBBuilderSchema);
begin
  FFSchema := ASchema;
end;

function TioDBBuilderSqlGenBase.NewQuery: IioQuery;
begin
  Result := TioDbFactory.Query(FSchema.ConnectionDefName);
end;

procedure TioDBBuilderSqlGenBase.DoFinalizeScript;
var
  LFinalization: TStrings;
begin
  LFinalization := TStringList.Create;
  try
    FinalizeScript(LFinalization);
    FSchema.SqlScript.AddStrings(LFinalization);
  finally
    LFinalization.Free;
  end;
end;

procedure TioDBBuilderSqlGenBase.DoInitializeScript;
var
  LInitialization: TStrings;
  I: Integer;
begin
  LInitialization := TStringList.Create;
  try
    InitializeScript(LInitialization);
    for I := LInitialization.Count-1 downto 0 do
      FSchema.SqlScript.Insert(0, LInitialization[I]);
  finally
    LInitialization.Free;
  end;
end;

procedure TioDBBuilderSqlGenBase.FinalizeScript(const AFinalization: TStrings);
begin
  AddEmptyLine;
  AddComment('****************************');
  AddComment('*    End of the script     *');
  AddComment('****************************');
end;

function TioDBBuilderSqlGenBase.FSchema: IioDBBuilderSchema;
begin
  Result := FSchema;
end;

procedure TioDBBuilderSqlGenBase.InitializeScript(const AInitialization: TStrings);
begin
  AddComment('****************************');
  AddComment('* Script generated by iORM *');
  AddComment('****************************');
  AddComment('Date - time....: ' + FormatDateTime('d mmm yyyy - hh:nn:ss', Now));
  AddComment('Connection name: ' + FSchema.ConnectionDefName);
  AddComment('Database file..: ' + FSchema.DatabaseFileName);
  AddComment('DBMS...........: ' + TioConnectionManager.GetConnectionDefByName(FSchema.ConnectionDefName).Params.DriverID);;
  AddComment('****************************');
end;

end.
